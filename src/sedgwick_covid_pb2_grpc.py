# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sedgwick_covid_pb2 as sedgwick__covid__pb2


class CovidServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNumCasesConfirmed = channel.unary_unary(
                '/sedgwick.CovidService/GetNumCasesConfirmed',
                request_serializer=sedgwick__covid__pb2.CovidRequest.SerializeToString,
                response_deserializer=sedgwick__covid__pb2.CovidReply.FromString,
                )
        self.GetAll = channel.unary_stream(
                '/sedgwick.CovidService/GetAll',
                request_serializer=sedgwick__covid__pb2.GetAllRequest.SerializeToString,
                response_deserializer=sedgwick__covid__pb2.CovidReply.FromString,
                )
        self.GetTotal = channel.stream_unary(
                '/sedgwick.CovidService/GetTotal',
                request_serializer=sedgwick__covid__pb2.CovidRequest.SerializeToString,
                response_deserializer=sedgwick__covid__pb2.CovidReply.FromString,
                )
        self.GetNumCasesConfirmedForDates = channel.stream_stream(
                '/sedgwick.CovidService/GetNumCasesConfirmedForDates',
                request_serializer=sedgwick__covid__pb2.CovidRequest.SerializeToString,
                response_deserializer=sedgwick__covid__pb2.CovidReply.FromString,
                )


class CovidServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetNumCasesConfirmed(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotal(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNumCasesConfirmedForDates(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CovidServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNumCasesConfirmed': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNumCasesConfirmed,
                    request_deserializer=sedgwick__covid__pb2.CovidRequest.FromString,
                    response_serializer=sedgwick__covid__pb2.CovidReply.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=sedgwick__covid__pb2.GetAllRequest.FromString,
                    response_serializer=sedgwick__covid__pb2.CovidReply.SerializeToString,
            ),
            'GetTotal': grpc.stream_unary_rpc_method_handler(
                    servicer.GetTotal,
                    request_deserializer=sedgwick__covid__pb2.CovidRequest.FromString,
                    response_serializer=sedgwick__covid__pb2.CovidReply.SerializeToString,
            ),
            'GetNumCasesConfirmedForDates': grpc.stream_stream_rpc_method_handler(
                    servicer.GetNumCasesConfirmedForDates,
                    request_deserializer=sedgwick__covid__pb2.CovidRequest.FromString,
                    response_serializer=sedgwick__covid__pb2.CovidReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sedgwick.CovidService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CovidService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetNumCasesConfirmed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sedgwick.CovidService/GetNumCasesConfirmed',
            sedgwick__covid__pb2.CovidRequest.SerializeToString,
            sedgwick__covid__pb2.CovidReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sedgwick.CovidService/GetAll',
            sedgwick__covid__pb2.GetAllRequest.SerializeToString,
            sedgwick__covid__pb2.CovidReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTotal(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/sedgwick.CovidService/GetTotal',
            sedgwick__covid__pb2.CovidRequest.SerializeToString,
            sedgwick__covid__pb2.CovidReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNumCasesConfirmedForDates(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/sedgwick.CovidService/GetNumCasesConfirmedForDates',
            sedgwick__covid__pb2.CovidRequest.SerializeToString,
            sedgwick__covid__pb2.CovidReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
